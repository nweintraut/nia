{"ts":1372636078097,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var fs;\n\nfs = require('fs');\n\nmodule.exports = function mv(source, dest, cb){\n  fs.rename(source, dest, function(err){\n    if (!err) return cb();\n    if (err.code !== 'EXDEV') return cb(err);\n    fs.stat(source, function (err, stats) {\n      if (err) return cb(err);\n      if (stats.isFile()) {\n        moveFileAcrossDevice(source, dest, cb);\n      } else if (stats.isDirectory()) {\n        moveDirAcrossDevice(source, dest, cb);\n      } else {\n        var err2;\n        err2 = new Error(\"source must be file or directory\");\n        err2.code = 'NOTFILEORDIR';\n        cb(err2);\n      }\n    });\n  });\n};\n\nfunction moveFileAcrossDevice(source, dest, cb) {\n  var ins, outs;\n  ins = fs.createReadStream(source);\n  outs = fs.createWriteStream(dest);\n  ins.once('error', function(err){\n    outs.removeAllListeners('error');\n    outs.removeAllListeners('close');\n    outs.destroy();\n    cb(err);\n  });\n  outs.once('error', function(err){\n    ins.removeAllListeners('error');\n    outs.removeAllListeners('close');\n    ins.destroy();\n    cb(err);\n  });\n  outs.once('close', function(){\n    fs.unlink(source, cb);\n  });\n  ins.pipe(outs);\n}\n\n// TODO: do this natively instead of shelling out to `mv`\nfunction moveDirAcrossDevice(source, dest, cb) {\n  var child, stdout, stderr, err;\n  child = require('child_process').spawn('mv', [source, dest], {stdio: 'pipe'});\n  child.stderr.setEncoding('utf8');\n  child.stdout.setEncoding('utf8');\n  stderr = '';\n  stdout = '';\n  child.stderr.on('data', function(data) { stderr += data; });\n  child.stdout.on('data', function(data) { stdout += data; });\n  child.on('close', function(code) {\n    if (code === 0) {\n      cb();\n    } else {\n      err = new Error(\"mv had nonzero exit code\");\n      err.code = 'RETCODE';\n      err.stdout = stdout;\n      err.stderr = stderr;\n      cb(err);\n    }\n  });\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1828}]],"length":1828}
