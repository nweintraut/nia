{"ts":1372530162275,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1372530211815,"patch":[[{"diffs":[[1,"var socketio    = require('socket.io');\nvar io;\nvar guestNumber = 1;\nvar nickNames   = {};\nvar namesUsed   = [];\nvar currentRoom = {};"]],"start1":0,"start2":0,"length1":0,"length2":134}]],"length":134,"saved":false}
{"ts":1372530381512,"patch":[[{"diffs":[[0,"ntRoom = {};"],[1,"\n\nexports.listen = function(server) {\n    io = socketio.listen(server);\n    io.set('log level', 1);\n    io.sockets.on('connection', function(socket){\n        guestNumber = assignGuestName(socket, guestNumber, nickNames, namesUsed);\n        joinRoom(socket, 'Lobby');\n        handleMessageBroadcasting(socket, nickNames);\n        handleNameChangeAttempts(socket, nickNames, namesUsed);\n        handleRoomJoining(socket);\n        socket.on('rooms', function(){\n           socket.emit('rooms', io.sockets.manager.rooms); \n        });\n        handleClientDisconnection(socket, nickNames, namesUsed);\n    });\n};"]],"start1":122,"start2":122,"length1":12,"length2":618}]],"length":740,"saved":false}
{"ts":1372530715062,"patch":[[{"diffs":[[0," = {};\n\n"],[1,"function assignGuesName(socket, guestNumber, nickNames, namesUsed) {\n    var name = 'Guest' + guestNumber;\n    nickNames[socket.id] = name;\n    socket.emit('nameResult', { success:true, name: name});\n    namesUsed.push(name);\n    return guestNumber + 1;\n}\n\n"],[0,"exports."]],"start1":128,"start2":128,"length1":16,"length2":273}]],"length":997,"saved":false}
{"ts":1372530807599,"patch":[[{"diffs":[[0,"r + 1;\n}"],[1,"\nfunction joinRoom(socket, room) {\n    socket.join(room);\n    currentRoom[socket.id] = room;\n    socket.emit('joinResult', {room: room});\n    socket.broadcast.to(room).emit('message', { text: nickNames[socket.id] + ' has joined ' + room + '.'});\n}"],[0,"\n\nexport"]],"start1":383,"start2":383,"length1":16,"length2":263}]],"length":1244,"saved":false}
{"ts":1372530956048,"patch":[[{"diffs":[[0," '.'});\n"],[1,"    \n    var usersInRoom = io.sockets.clients(room);\n    if (usersInRoom.length > 1) {\n        var usersInRoomSummary = 'Users current lin ' + room + ': ';\n        for (var index in usersInRoom) {\n            var userSocketId = usersInRoom[index].id;\n            if(userSocketId != socket.id) {\n                if (index > 0) {\n                    usersInRoomSummary += ', ';\n                }\n                usersInRoomSummary += nickNames[userSocketId];\n            }\n        }\n        usersInRoomSummary += '.';\n        socket.emit('message', {text: usersInRoomSummary});\n    }\n"],[0,"}\n\nexpor"]],"start1":629,"start2":629,"length1":16,"length2":598}]],"length":1826,"saved":false}
{"ts":1372531035427,"patch":[[{"diffs":[[0,"signGues"],[1,"t"],[0,"Name(soc"]],"start1":147,"start2":147,"length1":16,"length2":17}]],"length":1827,"saved":false}
{"ts":1372531106538,"patch":[[{"diffs":[[0,"   }\n}\n\n"],[1,"function handleNameChangeAttempts(socket, nickNames, namesUsed){\n    \n}\n\n"],[0,"exports."]],"start1":1215,"start2":1215,"length1":16,"length2":89}]],"length":1900,"saved":false}
{"ts":1372531354012,"patch":[[{"diffs":[[0,"d){\n    "],[1,"socket.on('nameAttempt', function(name) {\n       if (name.indexOf('Guest') === 0 ) {\n           socket.emit('nameResult', {\n               success: false, message: 'Names cannot begin with \"Guest\".'\n           });\n       } else {\n           if(namesUsed.indexOf(name) === -1 ) {\n               var previousName = nickNames[socket.id];\n               var previousNameIndex = namesUsed.indexOf(previousName);\n               namesUsed.push(name);\n               nickNames[socket.id] = name;\n               delete namesUsed[previousNameIndex];\n               socket.emit('nameResult', {\n                   success: true,\n                   name: name\n               });\n               socket.broadcast.to(currentRoom[socket.id]).emit('message', {\n                   text: previousName + ' is now known as ' + name + '.'\n               });\n           }\n       }\n    });"],[0,"\n}\n\nexpo"]],"start1":1284,"start2":1284,"length1":16,"length2":880}]],"length":2764,"saved":false}
{"ts":1372531388428,"patch":[[{"diffs":[[0,"            });\n"],[1,"           } else {\n               socket.emit('nameResult', {\n                   success: false,\n                   message: \"That name is already in use.\"\n               })\n"],[0,"           }\n   "]],"start1":2111,"start2":2111,"length1":32,"length2":207}]],"length":2939,"saved":false}
{"ts":1372531390196,"patch":[[{"diffs":[[0,"      })"],[1,";"],[0,"\n       "]],"start1":2293,"start2":2293,"length1":16,"length2":17}]],"length":2940,"saved":false}
{"ts":1372531512736,"patch":[[{"diffs":[[0," });\n}\n\n"],[1,"function handleMessageBroadcasting(socket) {\n    socket.on('message', function(message){\n       socket.broadcast.to(message.room).emit('message', {\n           text: nickNames[socket.id] + ': ' + message.text\n       });\n    });\n}\n"],[0,"exports."]],"start1":2328,"start2":2328,"length1":16,"length2":245}]],"length":3169,"saved":false}
{"ts":1372531569481,"patch":[[{"diffs":[[0,"  });\n}\n"],[1,"function handleRoomJoining(socket) {\n    socket.on('join', function(room) {\n        socket.leave(currentRoom[socket.id]);\n        joinRoom(socket,room.newRoom);\n    });\n}\n"],[0,"exports."]],"start1":2557,"start2":2557,"length1":16,"length2":187}]],"length":3340,"saved":false}
{"ts":1372531635140,"patch":[[{"diffs":[[0,"  });\n}\n"],[1,"function handleClientDisconnection(socket) {\n    socket.on('disconnect', function(){\n       var nameIndex = namesUsed.indexOf(nickNames[socket.id]);\n       delete namesUsed[nameIndex];\n       delete nickNames[socket.id];\n    });\n}\n"],[0,"exports."]],"start1":2728,"start2":2728,"length1":16,"length2":247}]],"length":3571,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372535165285,"patch":[[{"diffs":[[0," current"],[-1," "],[0,"l"],[1,"y "],[0,"in ' + r"]],"start1":764,"start2":764,"length1":18,"length2":19}]],"length":3572,"saved":false}
{"ts":1372535196686,"patch":[[{"diffs":[[0,"ntly in "],[1,"["],[0,"' + room"]],"start1":770,"start2":770,"length1":16,"length2":17},{"diffs":[[0,"room + '"],[1,"]"],[0,": ';\n   "]],"start1":783,"start2":783,"length1":16,"length2":17}]],"length":3574,"saved":false}
{"ts":1372535436740,"patch":[[{"diffs":[[0,"function(){\n"],[1,"            console.log('Made it to socket.on(rooms)');\n"],[0,"           s"]],"start1":3415,"start2":3415,"length1":24,"length2":80}]],"length":3630,"saved":false}
{"ts":1372535897928,"patch":[[{"diffs":[[0,"ssage){\n"],[1,"        console.log(\"Got a message \" + message + \"]\");\n"],[0,"       s"]],"start1":2420,"start2":2420,"length1":16,"length2":71},{"diffs":[[0,"function(){\n"],[1,"//"],[0,"            "]],"start1":3470,"start2":3470,"length1":24,"length2":26}]],"length":3687,"saved":false}
{"ts":1372535901648,"patch":[[{"diffs":[[0,"message "],[1,"{"],[0,"\" + mess"]],"start1":2455,"start2":2455,"length1":16,"length2":17}]],"length":3688,"saved":false}
{"ts":1372535904351,"patch":[[{"diffs":[[0,"message "],[-1,"{"],[1,"["],[0,"\" + mess"]],"start1":2455,"start2":2455,"length1":17,"length2":17}]],"length":3688,"saved":false}
{"ts":1372536727706,"patch":[[{"diffs":[[0,"mSummary});\n"],[1,"    } else {\n        socket.emit('message', {text: \"You are first in room [\" + x + \"]\"});\n"],[0,"    }\n}\n\nfun"]],"start1":1205,"start2":1205,"length1":24,"length2":114}]],"length":3778,"saved":false}
{"ts":1372536743533,"patch":[[{"diffs":[[0,"om [\" + "],[-1,"x"],[1,"room"],[0," + \"]\"})"]],"start1":1288,"start2":1288,"length1":17,"length2":20}]],"length":3781,"saved":false}
{"ts":1372536941576,"patch":[[{"diffs":[[0,"e){\n"],[-1,"        console.log(\"Got a message [\" + message + \"]\");\n"],[0,"    "]],"start1":2517,"start2":2517,"length1":64,"length2":8}]],"length":3725,"saved":false}
