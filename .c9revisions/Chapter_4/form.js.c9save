{"ts":1372544616796,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1372544646980,"patch":[[{"diffs":[[1,"var http    = require('http');\nvar server  = http.createServer();\n"]],"start1":0,"start2":0,"length1":0,"length2":66}]],"length":66,"saved":false}
{"ts":1372544703171,"patch":[[{"diffs":[[0,"rver();\n"],[1,"\n// Cloud9: use 'process.env.PORT' as the port and 'process.env.IP' as the host in your scripts\nprocess.env.PORT = process.env.PORT? process.env.PORT : \"3000\";\nprocess.env.IP   = process.env.IP? process.env.IP : \"127.0.0.1\"\n\nserver.on('request', function(request, response){\n\n});\n\nserver.listen(process.env.PORT, function() {\n    console.log('Server running at http://' + process.env.IP + \":\" + process.env.PORT + \"/\");\n});"]],"start1":58,"start2":58,"length1":8,"length2":431}]],"length":489,"saved":false}
{"ts":1372544722690,"patch":[[{"diffs":[[0,"ponse){\n"],[1,"    res.write(\"Hello World\\n\");\n    res.end();"],[0,"\n});\n\nse"]],"start1":333,"start2":333,"length1":16,"length2":62}]],"length":535,"saved":false}
{"ts":1372544730916,"patch":[[{"diffs":[[0,"\n    res"],[1,"ponse"],[0,".write(\""]],"start1":340,"start2":340,"length1":16,"length2":21},{"diffs":[[0,"\n    res"],[1,"ponse"],[0,".end();\n"]],"start1":377,"start2":377,"length1":16,"length2":21}]],"length":545,"saved":false}
{"ts":1372544733436,"patch":[[{"diffs":[[0,"7.0.0.1\""],[1,";"],[0,"\n\nserver"]],"start1":281,"start2":281,"length1":16,"length2":17}]],"length":546,"saved":false}
{"ts":1372544887028,"patch":[[{"diffs":[[0,"ponse){\n"],[1,"// Other fields/methods on response\n//    response.setHeader('Content-Length', body.length);\n//    response.setHeader('Content-Type', 'text/plain');\n//    response.statusCode = 302;\n    \n"],[0,"    resp"]],"start1":334,"start2":334,"length1":16,"length2":203}]],"length":733,"saved":false}
{"ts":1372545099626,"patch":[[{"diffs":[[0,"02;\n    "],[-1,"\n"],[1,"var url = 'http://google.com';\n    var body = '<p>Redirecting to <a href=\\\"' + url + '\\\">' + url + '</a></p>';\n    response.setHeader('Location', url);\n    response.setHeader('Content-Length', body.length);\n    response.setHeader('Content-Type', 'text/html');\n    response.statusCode = 302;\n    response.end(body);    \n//"],[0,"    resp"]],"start1":520,"start2":520,"length1":17,"length2":337},{"diffs":[[0,"ld\\n\");\n"],[1,"//"],[0,"    resp"]],"start1":878,"start2":878,"length1":16,"length2":18}]],"length":1055,"saved":false}
{"ts":1372545322789,"patch":[[{"diffs":[[0,"0.0.1\";\n"],[1,"/*"],[0,"\nserver."]],"start1":283,"start2":283,"length1":16,"length2":18},{"diffs":[[0,"();\n});\n"],[1,"*/\nserver.on('request', function(request, response){\n    request.on('data', function(chunk){ console.log('parsed', chunk)});\n    request.on('end', function(){\n        console.log('done parsing');\n        res.end();\n    });\n});"],[0,"\nserver."]],"start1":906,"start2":906,"length1":16,"length2":242}]],"length":1283,"saved":false}
{"ts":1372545327429,"patch":[[{"diffs":[[0,"     res"],[1,"ponse"],[0,".end();\n"]],"start1":1113,"start2":1113,"length1":16,"length2":21}]],"length":1288,"saved":false}
{"ts":1372545449479,"patch":[[{"diffs":[[0,"ponse){\n"],[1,"    request.setEncoding('utf8');\n"],[0,"    requ"]],"start1":959,"start2":959,"length1":16,"length2":49}]],"length":1321,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372545716095,"patch":[[{"diffs":[[0,"\n});\n*/\n"],[1,"var items = [];\n"],[0,"server.o"]],"start1":909,"start2":909,"length1":16,"length2":32},{"diffs":[[0,"ponse){\n"],[1,"    switch (request.method) {\n        case 'POST': \n            var item = '';\n        "],[0,"    requ"]],"start1":975,"start2":975,"length1":16,"length2":103},{"diffs":[[0,"ng('utf8');\n"],[1,"        "],[0,"    request."]],"start1":1091,"start2":1091,"length1":24,"length2":32},{"diffs":[[0,"k){ "],[-1,"console.log('parsed',"],[1,"item +="],[0," chunk"],[-1,")"],[1,";"],[0,"});\n"],[1,"        "],[0,"    "]],"start1":1147,"start2":1147,"length1":40,"length2":34},{"diffs":[[0,"    "],[-1,"console.log('done parsing');\n"],[1,"        items.push(item);\n     "],[0,"        "],[1,"   "],[0,"resp"]],"start1":1215,"start2":1215,"length1":45,"length2":50},{"diffs":[[0,"end("],[-1,");\n    });"],[1,"'OK\\n');\n            });\n    }\n"],[0,"\n});"]],"start1":1270,"start2":1270,"length1":18,"length2":39}]],"length":1452,"saved":false}
{"ts":1372545859858,"patch":[[{"diffs":[[0,"        });\n"],[1,"            \n            break;\n        case 'GET':\n            response.setHeader('Content-Type', 'text/plain');\n            items.forEach(function(item, i){\n                response.write(i + ') ' + item + '\\n');\n            });\n            response.end();\n            break;\n"],[0,"    }\n\n});\ns"]],"start1":1287,"start2":1287,"length1":24,"length2":302}]],"length":1730,"saved":false}
{"ts":1372545868622,"patch":[[{"diffs":[[0,"xt/plain');\n"],[1,"            response.statusCode = 200;\n"],[0,"            "]],"start1":1401,"start2":1401,"length1":24,"length2":63}]],"length":1769,"saved":false}
{"ts":1372546265632,"patch":[[{"diffs":[[0,"     break;\n"],[1,"        case 'DELETE' : \n            var path = url.parse(req.url).pathname;\n            var i = parseInt(path.slice(1), 10);\n            if (isNaN(i)) {\n                response.statusCode = 400;\n                response.end ('Invalid item id');\n            } else if (!items[i]) {\n                response.statusCode = 404;\n                response.end('Item not found');\n            } else {\n                items.splice(i, 1);\n                res.end('OK\\n');\n            }\n"],[0,"    }\n\n});\ns"]],"start1":1604,"start2":1604,"length1":24,"length2":502}]],"length":2247,"saved":false}
{"ts":1372546270551,"patch":[[{"diffs":[[0,"     res"],[1,"ponse"],[0,".end('OK"]],"start1":2058,"start2":2058,"length1":16,"length2":21}]],"length":2252,"saved":false}
{"ts":1372546288931,"patch":[[{"diffs":[[0,"erver();"],[1,"\nvar url     = require('url');"],[0,"\n\n// Clo"]],"start1":57,"start2":57,"length1":16,"length2":46}]],"length":2282,"saved":false}
{"ts":1372546294715,"patch":[[{"diffs":[[0,"arse(req"],[1,"uest"],[0,".url).pa"]],"start1":1699,"start2":1699,"length1":16,"length2":20}]],"length":2286,"saved":false}
{"ts":1372546437745,"patch":[[{"diffs":[[0,"('url');"],[1,"\nvar parse   = url.parse;\nvar join    = require('path').join;\nvar fs      = require('fs');\nvar root    = __dirname;"],[0,"\n\n// Clo"]],"start1":87,"start2":87,"length1":16,"length2":131}]],"length":2401,"saved":false}
{"ts":1372546553604,"patch":[[{"diffs":[[0,"\n});\n*/\n"],[1,"/*\n"],[0,"var item"]],"start1":1054,"start2":1054,"length1":16,"length2":19},{"diffs":[[0,"}\n    }\n"],[1,"});\n*/\nserver.on('request', function(request, response){\n    var sourceUrl = parse(req.url);\n    var path = join(root, sourceUrl.pathname);"],[0,"\n});\nser"]],"start1":2249,"start2":2249,"length1":16,"length2":155}]],"length":2543,"saved":false}
{"ts":1372546654607,"patch":[[{"diffs":[[0,"arse(req"],[1,"uest"],[0,".url);\n "]],"start1":2335,"start2":2335,"length1":16,"length2":20},{"diffs":[[0,"hname);\n"],[1,"    var stream = fs.createReadStream(path);\n    stream.on('data', function(chunk){\n        response.write(chunk);\n    });\n    stream.on('end', function(){\n       res.end(); \n    });\n"],[0,"});\nserv"]],"start1":2393,"start2":2393,"length1":16,"length2":198}]],"length":2729,"saved":false}
{"ts":1372546659276,"patch":[[{"diffs":[[0,"     res"],[1,"ponse"],[0,".end(); "]],"start1":2558,"start2":2558,"length1":16,"length2":21}]],"length":2734,"saved":false}
{"ts":1372546839102,"patch":[[{"diffs":[[0,"ream(path);\n"],[1,"    stream.pipe(response);\n    /*\n"],[0,"    stream.o"]],"start1":2433,"start2":2433,"length1":24,"length2":58},{"diffs":[[0,"    });\n"],[1,"    */\n"],[0,"});\nserv"]],"start1":2614,"start2":2614,"length1":16,"length2":23}]],"length":2775,"saved":false}
{"ts":1372547020565,"patch":[[{"diffs":[[0,"tream(path);"],[1,"\n\n    stream.on('error', function(err){\n        response.statusCode = 500;\n        response.end('Internal Server Error');\n    });"],[0,"\n    stream."]],"start1":2432,"start2":2432,"length1":24,"length2":153},{"diffs":[[0,"sponse);"],[1,"    "],[0,"\n    /*\n"]],"start1":2592,"start2":2592,"length1":16,"length2":20}]],"length":2908,"saved":false}
{"ts":1372547253228,"patch":[[{"diffs":[[0,"hname);\n"],[1,"    fs.stat(path, function(error, stat){\n        if (error) {\n            if('ENOENT' === error.code) {\n                response.statusCode = 404;\n                response.end('Not found');\n            } else {\n                response.statusCode = 500;\n                response.end('Internal Server Error');\n            }\n        } else {\n            response.setHeader('Content-Length', stat.size);\n            var stream = fs.createReadStream(path);\n            stream.on('eeor', function(err){\n                response.statusCode = 500;\n                response.end('Internal Server Error');\n            });\n            stream.pipe(response);\n        }\n    });\n"],[0,"    var "]],"start1":2393,"start2":2393,"length1":16,"length2":681}]],"length":3573,"saved":false}
{"contributors":[],"silentsave":false,"ts":1372550588521,"patch":[[{"diffs":[[0,"1\";\n"],[-1,"/*\nserver.on('request', function(request, response){\n// Other fields/methods on response\n//    response.setHeader('Content-Length', body.length);\n//    response.setHeader('Content-Type', 'text/plain');\n//    response.statusCode = 302;\n    var url = 'http://google.com';\n    var body = '<p>Redirecting to <a href=\\\"' + url + '\\\">' + url + '</a></p>';\n    response.setHeader('Location', url);\n    response.setHeader('Content-Length', body.length);\n    response.setHeader('Content-Type', 'text/html');\n    response.statusCode = 302;\n    response.end(body);    \n//    response.write(\"Hello World\\n\");\n//    response.end();\n});\n*/\n/*\nvar items = [];\nserver.on('request', function(request, response){\n    switch (request.method) {\n        case 'POST': \n            var item = '';\n            request.setEncoding('utf8');\n            request.on('data', function(chunk){ item += chunk;});\n            request.on('end', function(){\n                items.push(item);\n                response.end('OK\\n');\n            });\n            \n            break;\n        case 'GET':\n            response.setHeader('Content-Type', 'text/plain');\n            response.statusCode = 200;\n            items.forEach(function(item, i){\n                response.write(i + ') ' + item + '\\n');\n            });\n            response.end();\n            break;\n        case 'DELETE' : \n            var path = url.parse(request.url).pathname;\n            var i = parseInt(path.slice(1), 10);\n            if (isNaN(i)) {\n                response.statusCode = 400;\n                response.end ('Invalid item id');\n            } else if (!items[i]) {\n                response.statusCode = 404;\n                response.end('Item not found');\n            } else {\n                items.splice(i, 1);\n                response.end('OK\\n');\n            }\n    }\n});\n*/"],[0,"\nser"]],"start1":432,"start2":432,"length1":1835,"length2":8}]],"length":1746,"saved":false}
{"ts":1372550596909,"patch":[[{"diffs":[[0,"0.0.1\";\n"],[1,"/*"],[0,"\nserver."]],"start1":428,"start2":428,"length1":16,"length2":18},{"diffs":[[0," */\n});\n"],[1,"*/\n\n"],[0,"server.l"]],"start1":1598,"start2":1598,"length1":16,"length2":20}]],"length":1752,"saved":false}
{"ts":1372550711837,"patch":[[{"diffs":[[0,"ponse){\n"],[1,"// Other fields/methods on response\n//    response.setHeader('Content-Length', body.length);\n//    response.setHeader('Content-Type', 'text/plain');\n//    response.statusCode = 302;\n    var url = 'http://google.com';\n    var body = '<p>Redirecting to <a href=\\\"' + url + '\\\">' + url + '</a></p>';\n    response.setHeader('Location', url);\n    response.setHeader('Content-Length', body.length);\n    response.setHeader('Content-Type', 'text/html');\n    response.statusCode = 302;\n    response.end(body);    \n//    response.write(\"Hello World\\n\");\n//    response.end();\n});\n*/\n/*\nvar items = [];\nserver.on('request', function(request, response){\n    switch (request.method) {\n        case 'POST': \n            var item = '';\n            request.setEncoding('utf8');\n            request.on('data', function(chunk){ item += chunk;});\n            request.on('end', function(){\n                items.push(item);\n                response.end('OK\\n');\n            });\n            \n            break;\n        case 'GET':\n            response.setHeader('Content-Type', 'text/plain');\n            response.statusCode = 200;\n            items.forEach(function(item, i){\n                response.write(i + ') ' + item + '\\n');\n            });\n            response.end();\n            break;\n        case 'DELETE' : \n            var path = url.parse(request.url).pathname;\n            var i = parseInt(path.slice(1), 10);\n            if (isNaN(i)) {\n                response.statusCode = 400;\n                response.end ('Invalid item id');\n            } else if (!items[i]) {\n                response.statusCode = 404;\n                response.end('Item not found');\n            } else {\n                items.splice(i, 1);\n                response.end('OK\\n');\n            }\n    }\n});\n*/\nserver.on('request', function(request, response){\n"],[0,"    var "]],"start1":481,"start2":481,"length1":16,"length2":1841},{"diffs":[[0," */\n"],[1,""],[0,"});\n"],[-1,"*/\n\n"],[0,"serv"]],"start1":3423,"start2":3423,"length1":16,"length2":12}]],"length":3573,"saved":false}
